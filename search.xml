<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>create-os-day0</title>
      <link href="/2018/09/08/create-os-day0/"/>
      <url>/2018/09/08/create-os-day0/</url>
      <content type="html"><![CDATA[<hr><p>title: macでOSを自作 - Day0<br>date: 2018-09-08 15:40:20</p><h2 id="tags"><a href="#tags" class="headerlink" title="tags:"></a>tags:</h2><h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>書籍「<a href="https://www.amazon.co.jp/30%E6%97%A5%E3%81%A7%E3%81%A7%E3%81%8D%E3%82%8B-OS%E8%87%AA%E4%BD%9C%E5%85%A5%E9%96%80-%E5%B7%9D%E5%90%88-%E7%A7%80%E5%AE%9F/dp/4839919844" target="_blank" rel="noopener">30日でできる！OS自作入門</a>」を参考に OS を自作し、OS の仕組みを学習する。<br>この書籍では、Windows OS やフロッピーディスクを前提に記述されているが、mac で実行できるよう適宜内容を変更して実施する。<br>また、書籍内で使用されている著者の独自スクリプトやコマンドも使用せず、汎用的なものをなるべく使用するようにする。</p><h1 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h1><p>Day0 では、mac で OS を自作するための環境構築手順について説明していく。</p><h1 id="資材の配置"><a href="#資材の配置" class="headerlink" title="資材の配置"></a>資材の配置</h1><p>HariboteOSという名前のディレクトリをホームディレクトリに作成する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/HariboteOS</span><br></pre></td></tr></table></figure></p><p>下記のサポートサイトより、HariboteOS.zip をダウンロードし、解凍する。</p><ul><li><a href="https://book.mynavi.jp/supportsite/detail/4839919844.html" target="_blank" rel="noopener">https://book.mynavi.jp/supportsite/detail/4839919844.html</a></li></ul><p>解凍された HariboteOS.iso をマウントし、projects ディレクトリを ~/HariboteOS ディレクトリ配下にコピーする。<br>projects ディレクトリには、書籍に掲載されているソースコードがセクション毎に格納されている。</p><h1 id="qemu-のインストール"><a href="#qemu-のインストール" class="headerlink" title="qemu のインストール"></a>qemu のインストール</h1><p>brew で qemu をインストールする。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install qemu</span><br></pre></td></tr></table></figure></p><p>qemu のバージョンを確認する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ qemu-system-i386 -version</span><br><span class="line">QQEMU emulator version 3.0.0</span><br><span class="line">Copyright (c) 2003-2017 Fabrice Bellard and the QEMU Project developers</span><br></pre></td></tr></table></figure></p><p>qemu を使用し、HariboteOS を実行をし、正常に動作するか確認する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/HariboteOS/projects/01_day/helloos0</span><br><span class="line">$ qemu-system-x86_64 -drive format=raw,file=helloos.img</span><br></pre></td></tr></table></figure></p><p>プロンプトが開き、”hello, world” と表示されていれば問題ないので、プロンプトを閉じる。<br><img src="/2018/09/08/create-os-day0//test-helloos0.png" width="600px"></p><h1 id="バイナリエディタ-0xED-のインストール"><a href="#バイナリエディタ-0xED-のインストール" class="headerlink" title="バイナリエディタ(0xED) のインストール"></a>バイナリエディタ(0xED) のインストール</h1><p>以下のサイトから 0xED をダウンロード後、解凍し、0xED.app ファイルをアプリケーションディレクトリへコピーしておく。</p><ul><li><a href="http://www.suavetech.com/0xed/0xed.html" target="_blank" rel="noopener">http://www.suavetech.com/0xed/0xed.html</a></li></ul><h1 id="nasm-のインストール"><a href="#nasm-のインストール" class="headerlink" title="nasm のインストール"></a>nasm のインストール</h1><p>アセンブラのプログラミングで使用する nasm をインストールする。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install nasm</span><br></pre></td></tr></table></figure></p><p>nasm のバージョン情報が表示されれば問題ない。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ nasm -v</span><br><span class="line">NASM version 0.98.40 (Apple Computer, Inc. build 11) compiled on Jun  4 2018</span><br></pre></td></tr></table></figure></p><h1 id="gdb-のインストール"><a href="#gdb-のインストール" class="headerlink" title="gdb のインストール"></a>gdb のインストール</h1><p>デバッグ用途で使用する gdb もインストールしておく。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install gdb</span><br></pre></td></tr></table></figure></p><p>正常にインストールされていれば、gdb のバージョン情報が表示される。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ gdb --version</span><br><span class="line">GNU gdb (GDB) 8.1.1</span><br><span class="line">Copyright (C) 2018 Free Software Foundation, Inc.</span><br><span class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class="line">This is free software: you are free to change and redistribute it.</span><br><span class="line">There is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;</span><br><span class="line">and &quot;show warranty&quot; for details.</span><br><span class="line">This GDB was configured as &quot;x86_64-apple-darwin17.7.0&quot;.</span><br><span class="line">Type &quot;show configuration&quot; for configuration details.</span><br><span class="line">For bug reporting instructions, please see:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class="line">Find the GDB manual and other documentation resources online at:</span><br><span class="line">&lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class="line">For help, type &quot;help&quot;.</span><br><span class="line">Type &quot;apropos word&quot; to search for commands related to &quot;word&quot;.</span><br></pre></td></tr></table></figure></p><h1 id="参考URL"><a href="#参考URL" class="headerlink" title="参考URL"></a>参考URL</h1><ul><li>「30日でできる！ OS自作入門」サポートページ<ul><li><a href="https://book.mynavi.jp/supportsite/detail/4839919844.html" target="_blank" rel="noopener">https://book.mynavi.jp/supportsite/detail/4839919844.html</a><ul><li><a href="http://hrb.osask.jp/" target="_blank" rel="noopener">http://hrb.osask.jp/</a></li></ul></li></ul></li><li>バイナリエディタ(0xED)配布サイト<ul><li><a href="http://www.suavetech.com/0xed/0xed.html" target="_blank" rel="noopener">http://www.suavetech.com/0xed/0xed.html</a></li></ul></li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>OpenStack API 実装例</title>
      <link href="/2018/09/08/howto-use-openstack-api/"/>
      <url>/2018/09/08/howto-use-openstack-api/</url>
      <content type="html"><![CDATA[<h1 id="curl-使用"><a href="#curl-使用" class="headerlink" title="curl 使用"></a>curl 使用</h1><p>まずは OpenStack の環境変数を読み込む。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/overcloudrc</span><br></pre></td></tr></table></figure><p>次にユーザ名とパスワード、ドメイン名を指定し、トークンを取得する。<br>keystone で v2 を使用しているか v3 を使用しているかによって トークンの表示位置が変更するので注意が必要。<br>今回は、keysotne v3 を前提にしている。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">token=$(curl -i -s -X POST -H &apos;Content-Type: application/json&apos; -d &apos;&#123;&quot;auth&quot;: &#123;&quot;identity&quot;: &#123;&quot;methods&quot;: [&quot;&apos;$&#123;OS_AUTH_TYPE&#125;&apos;&quot;], &quot;password&quot;: &#123;&quot;user&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_USERNAME&#125;&apos;&quot;, &quot;password&quot;: &quot;&apos;$&#123;OS_PASSWORD&#125;&apos;&quot;, &quot;domain&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_PROJECT_DOMAIN_NAME&#125;&apos;&quot;&#125;&#125;&#125;&#125;, &quot;scope&quot;: &#123;&quot;project&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_PROJECT_NAME&#125;&apos;&quot;, &quot;domain&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_PROJECT_DOMAIN_NAME&#125;&apos;&quot;&#125;&#125;&#125;&#125;&#125;&apos; $&#123;OS_AUTH_URL&#125;/auth/tokens?nocatalog | grep &quot;X-Subject-Token&quot; | cut -d&quot; &quot; -f2)</span><br></pre></td></tr></table></figure><p>あとは、先ほど取得したトークンを “X-Auth-Token” にセットして、API を発行すれば OK。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i -s -X PUT $&#123;nova_endpoint&#125;/$&#123;project_id&#125;/os-services/force-down -H &quot;Content-Type: application/json&quot; -H &quot;Accept: application/json &quot; -H &quot;X-OpenStack-Nova-API-Version: 2.11&quot; -H &quot;X-Auth-Token: $&#123;token&#125;&quot; -d &apos;&#123;&quot;binary&quot;: &quot;nova-compute&quot;, &quot;host&quot;: &quot;&apos;$&#123;target&#125;&apos;&quot;, &quot;forced_down&quot;: &apos;$&#123;forcedown&#125;&apos;&#125;&apos;</span><br></pre></td></tr></table></figure><p>コード全文は以下の通りとなる。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">function help() &#123;</span><br><span class="line">  echo &quot;usage: $&#123;0##*/&#125; &lt;target&gt; &lt;action&gt;&quot;</span><br><span class="line">  echo &quot;usage: $&#123;0##*/&#125; [--help]&quot;</span><br><span class="line">  echo &quot;&quot;</span><br><span class="line">  echo &quot;Positional arguments:&quot;</span><br><span class="line">  echo &quot;  &lt;target&gt;    Computer name that you want to do force-down.&quot;</span><br><span class="line">  echo &quot;  &lt;action&gt;    true(set force-down) or false(unset force-down)&quot;</span><br><span class="line">  echo &quot;&quot;</span><br><span class="line">  echo &quot;Optional arguments:&quot;</span><br><span class="line">  echo &quot;  --help      Display help menu.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">while getopts &quot;:vh-:&quot; opt; do</span><br><span class="line">  case &quot;$opt&quot; in</span><br><span class="line">    -)</span><br><span class="line">      case &quot;$&#123;OPTARG&#125;&quot; in</span><br><span class="line">        help)</span><br><span class="line">          help</span><br><span class="line">          exit 0</span><br><span class="line">          ;;</span><br><span class="line">      esac</span><br><span class="line">      ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">if [ $# -ne 2 ]; then</span><br><span class="line">  help</span><br><span class="line">  echo &quot;&quot;</span><br><span class="line">  echo &quot;[ERROR] Set the correct number of arguments. (require: 2, input: $#)&quot;</span><br><span class="line">  exit 1</span><br><span class="line">else</span><br><span class="line">  target=$1</span><br><span class="line"></span><br><span class="line">  case &quot;$2&quot; in</span><br><span class="line">    &quot;true&quot; | &quot;false&quot; )</span><br><span class="line">      forcedown=$2</span><br><span class="line">      ;;</span><br><span class="line">    * )</span><br><span class="line">      help</span><br><span class="line">      echo &quot;&quot;</span><br><span class="line">      echo &quot;[ERROR] Please set &apos;true&apos; or &apos;false&apos; as 2nd arguments.&quot;</span><br><span class="line">      exit 1</span><br><span class="line">      ;;</span><br><span class="line">  esac</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">source ~/overcloudrc</span><br><span class="line"></span><br><span class="line">project_id=`openstack project list | grep &quot; $&#123;OS_PROJECT_NAME&#125; &quot; |  cut -d&quot; &quot; -f2`</span><br><span class="line">nova_endpoint=`openstack endpoint list | grep &quot; compute &quot; | grep &quot; public &quot; | cut -d&quot;|&quot; -f8 | sed -e &quot;s/ //g&quot;`</span><br><span class="line"></span><br><span class="line">token=$(curl -i -s -X POST -H &apos;Content-Type: application/json&apos; -d &apos;&#123;&quot;auth&quot;: &#123;&quot;identity&quot;: &#123;&quot;methods&quot;: [&quot;&apos;$&#123;OS_AUTH_TYPE&#125;&apos;&quot;], &quot;password&quot;: &#123;&quot;user&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_USERNAME&#125;&apos;&quot;, &quot;password&quot;: &quot;&apos;$&#123;OS_PASSWORD&#125;&apos;&quot;, &quot;domain&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_PROJECT_DOMAIN_NAME&#125;&apos;&quot;&#125;&#125;&#125;&#125;, &quot;scope&quot;: &#123;&quot;project&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_PROJECT_NAME&#125;&apos;&quot;, &quot;domain&quot;: &#123;&quot;name&quot;: &quot;&apos;$&#123;OS_PROJECT_DOMAIN_NAME&#125;&apos;&quot;&#125;&#125;&#125;&#125;&#125;&apos; $&#123;OS_AUTH_URL&#125;/auth/tokens?nocatalog | grep &quot;X-Subject-Token&quot; | cut -d&quot; &quot; -f2)</span><br><span class="line">token=`echo $&#123;token&#125; | sed -e &quot;s/[\r\n]\+//g&quot;`</span><br><span class="line"></span><br><span class="line">curl -i -s -X PUT $&#123;nova_endpoint&#125;/$&#123;project_id&#125;/os-services/force-down -H &quot;Content-Type: application/json&quot; -H &quot;Accept: application/json &quot; -H &quot;X-OpenStack-Nova-API-Version: 2.11&quot; -H &quot;X-Auth-Token: $&#123;token&#125;&quot; -d &apos;&#123;&quot;binary&quot;: &quot;nova-compute&quot;, &quot;host&quot;: &quot;&apos;$&#123;target&#125;&apos;&quot;, &quot;forced_down&quot;: &apos;$&#123;forcedown&#125;&apos;&#125;&apos; &gt;/dev/null</span><br><span class="line">if [ $? -eq 0 ]; then</span><br><span class="line">  echo &quot;[INFO] force-down was finished successfully&quot;</span><br><span class="line">else</span><br><span class="line">  echo &quot;[ERROR] force-down was failed.&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">nova hypervisor-list</span><br></pre></td></tr></table></figure><p>実行すると以下のように出力される。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ./api_nova_forcedown.sh --<span class="built_in">help</span></span><br><span class="line">usage: api_nova_forcedown.sh &lt;target&gt; &lt;action&gt;</span><br><span class="line">usage: api_nova_forcedown.sh [--<span class="built_in">help</span>]</span><br><span class="line"></span><br><span class="line">Positional arguments:</span><br><span class="line">  &lt;target&gt;    Computer name that you want to <span class="keyword">do</span> force-down.</span><br><span class="line">  &lt;action&gt;    <span class="literal">true</span>(<span class="built_in">set</span> force-down) or <span class="literal">false</span>(<span class="built_in">unset</span> force-down)</span><br><span class="line"></span><br><span class="line">Optional arguments:</span><br><span class="line">  --<span class="built_in">help</span>      Display <span class="built_in">help</span> menu.</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sh ./api_nova_forcedown.sh jfc-cmp01.nttdata.co.jp <span class="literal">true</span></span><br><span class="line">[INFO] force-down was finished successfully</span><br><span class="line">+--------------------------------------+-------------------------+-------+---------+</span><br><span class="line">| ID                                   | Hypervisor hostname     | State | Status  |</span><br><span class="line">+--------------------------------------+-------------------------+-------+---------+</span><br><span class="line">| 1ff4b167-87c0-409b-87e9-298be57c6e11 | jfc-cmp02.nttdata.co.jp | up    | enabled |</span><br><span class="line">| d40ee745-18e6-43f6-b605-04ac6bb32972 | jfc-cmp01.nttdata.co.jp | down  | enabled |</span><br><span class="line">+--------------------------------------+-------------------------+-------+---------+</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sh ./api_nova_forcedown.sh jfc-cmp01.nttdata.co.jp <span class="literal">false</span></span><br><span class="line">[INFO] force-down was finished successfully</span><br><span class="line">+--------------------------------------+-------------------------+-------+---------+</span><br><span class="line">| ID                                   | Hypervisor hostname     | State | Status  |</span><br><span class="line">+--------------------------------------+-------------------------+-------+---------+</span><br><span class="line">| 1ff4b167-87c0-409b-87e9-298be57c6e11 | jfc-cmp02.nttdata.co.jp | up    | enabled |</span><br><span class="line">| d40ee745-18e6-43f6-b605-04ac6bb32972 | jfc-cmp01.nttdata.co.jp | up    | enabled |</span><br><span class="line">+--------------------------------------+-------------------------+-------+---------+</span><br></pre></td></tr></table></figure><h1 id="Python-SDK-使用"><a href="#Python-SDK-使用" class="headerlink" title="Python SDK 使用"></a>Python SDK 使用</h1><p>curl を使用するケースと同様、こちらも keystone v2 と v3 で実装が若干異なってくるが、今回は v3 を前提に話を進める。</p><p>まずは OpenStack の環境変数を読み込む。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/overcloudrc</span><br></pre></td></tr></table></figure><p>次に認証情報をもとにセッションを確立する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">v3_auth = v3.Password(auth_url=os_auth_url,</span><br><span class="line">                      username=os.environ[&apos;OS_USERNAME&apos;],</span><br><span class="line">                      password=os.environ[&apos;OS_PASSWORD&apos;],</span><br><span class="line">                      project_name=os.environ[&apos;OS_PROJECT_NAME&apos;],</span><br><span class="line">                      project_domain_name=os.environ[&apos;OS_PROJECT_DOMAIN_NAME&apos;],</span><br><span class="line">                      user_domain_name=os.environ[&apos;OS_USER_DOMAIN_NAME&apos;])</span><br><span class="line"></span><br><span class="line">sess = session.Session(auth=v3_auth, verify=False)</span><br></pre></td></tr></table></figure></p><p>Nova API を使用する場合、最初に Nova Client のインスタンスを生成する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import novaclient.client</span><br><span class="line">n_sess = novaclient.client.Client(2, session=sess)</span><br></pre></td></tr></table></figure></p><p>任意の Nova API を実行し、結果を “result” に格納する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = n_sess.servers.list()</span><br></pre></td></tr></table></figure></p><p>最後に “result” の値を出力する。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for r in result:</span><br><span class="line">  print r.id, r.name;</span><br></pre></td></tr></table></figure></p><p>コード全文は以下の通り。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import logging</span><br><span class="line"></span><br><span class="line">from keystoneauth1.identity import v3</span><br><span class="line">from keystoneauth1 import session</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">class Sample:</span><br><span class="line">  def __init__(self):</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    logging.basicConfig(level=logging.INFO)</span><br><span class="line">    self.logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line">  def authorization(self):</span><br><span class="line">    if os.environ.get(&apos;http_proxy&apos;) or os.environ.get(&apos;https_proxy&apos;):</span><br><span class="line">      self.logger.WARN(&quot;Proxy env vars set&quot;)</span><br><span class="line"></span><br><span class="line">    os_auth_url = os.environ[&apos;OS_AUTH_URL&apos;]</span><br><span class="line">    os_auth_url = os_auth_url.replace(&apos;v2.0&apos;, &apos;v3&apos;)</span><br><span class="line"></span><br><span class="line">    if not os_auth_url.endswith(&apos;v3&apos;):</span><br><span class="line">      os_auth_url += &apos;/v3&apos;</span><br><span class="line"></span><br><span class="line">    v3_auth = v3.Password(auth_url=os_auth_url,</span><br><span class="line">                          username=os.environ[&apos;OS_USERNAME&apos;],</span><br><span class="line">                          password=os.environ[&apos;OS_PASSWORD&apos;],</span><br><span class="line">                          project_name=os.environ[&apos;OS_PROJECT_NAME&apos;],</span><br><span class="line">                          project_domain_name=os.environ[&apos;OS_PROJECT_DOMAIN_NAME&apos;],</span><br><span class="line">                          user_domain_name=os.environ[&apos;OS_USER_DOMAIN_NAME&apos;])</span><br><span class="line"></span><br><span class="line">    k_sess = session.Session(auth=v3_auth, verify=False)</span><br><span class="line">    return k_sess</span><br><span class="line"></span><br><span class="line">  def nova_sess(self):</span><br><span class="line">    import novaclient.client</span><br><span class="line">    sess = self.authorization()</span><br><span class="line">    n_sess = novaclient.client.Client(2, session=sess)</span><br><span class="line">    return n_sess</span><br><span class="line"></span><br><span class="line">  def nova_list(self):</span><br><span class="line">    n_sess = self.nova_sess()</span><br><span class="line">    result = n_sess.servers.list()</span><br><span class="line">    for r in result:</span><br><span class="line">      print r.id, r.name;</span><br><span class="line"></span><br><span class="line">  def neutron_sess(self):</span><br><span class="line">    import neutronclient.neutron.client</span><br><span class="line">    sess = self.authorization()</span><br><span class="line">    q_sess = neutronclient.neutron.client.Client(&apos;2.0&apos;, session=sess)</span><br><span class="line">    return q_sess</span><br><span class="line"></span><br><span class="line">  def neutron_list(self):</span><br><span class="line">    q_sess = self.neutron_sess()</span><br><span class="line">    result = q_sess.list_networks()[&apos;networks&apos;]</span><br><span class="line">    for r in result:</span><br><span class="line">      for k, v in r.items():</span><br><span class="line">        print(&quot;%s : %s&quot; % (k, v))</span><br><span class="line">      print(&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = Sample()</span><br><span class="line">s.nova_list()</span><br><span class="line">s.neutron_list()</span><br></pre></td></tr></table></figure></p><p>実行すると以下の通り出力される。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">03116438-bd19-4452-8339-cd992c50d156 jfc-cmp02</span><br><span class="line">988877da-17eb-4a07-a610-ccab64eac23a jfc-ctr01</span><br><span class="line">71d4cc92-9ab4-4678-bd53-b2c03ebe943e jfc-ctr02</span><br><span class="line">09ae722c-8e05-4a02-ad86-dbe7b2232775 jfc-cmp01</span><br><span class="line">3a416f50-9ea2-48f5-9168-447cda1c4f15 jfc-ctr03</span><br><span class="line">provider:physical_network : ctlplane</span><br><span class="line">ipv6_address_scope : None</span><br><span class="line">revision_number : 8</span><br><span class="line">port_security_enabled : True</span><br><span class="line">provider:network_type : flat</span><br><span class="line">id : 515ab5ab-e73c-428b-b145-4f9b89fac431</span><br><span class="line">router:external : False</span><br><span class="line">availability_zone_hints : []</span><br><span class="line">availability_zones : [u&apos;nova&apos;]</span><br><span class="line">ipv4_address_scope : None</span><br><span class="line">shared : False</span><br><span class="line">project_id : ebe0a369198a4b92b0f294ef22386756</span><br><span class="line">l2_adjacency : True</span><br><span class="line">status : ACTIVE</span><br><span class="line">subnets : [u&apos;a2509cf3-fb5e-4714-8820-1b94283ccdf7&apos;]</span><br><span class="line">description :</span><br><span class="line">tags : []</span><br><span class="line">updated_at : 2018-07-27T10:47:42Z</span><br><span class="line">provider:segmentation_id : None</span><br><span class="line">name : ctlplane</span><br><span class="line">admin_state_up : True</span><br><span class="line">tenant_id : ebe0a369198a4b92b0f294ef22386756</span><br><span class="line">created_at : 2018-07-27T07:37:22Z</span><br><span class="line">mtu : 1500</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">provider:physical_network : external</span><br><span class="line">ipv6_address_scope : None</span><br><span class="line">revision_number : 3</span><br><span class="line">port_security_enabled : True</span><br><span class="line">provider:network_type : flat</span><br><span class="line">id : 91c89b6a-2d44-4489-86f9-992c9017cfe0</span><br><span class="line">router:external : False</span><br><span class="line">availability_zone_hints : []</span><br><span class="line">availability_zones : []</span><br><span class="line">ipv4_address_scope : None</span><br><span class="line">shared : False</span><br><span class="line">project_id : ebe0a369198a4b92b0f294ef22386756</span><br><span class="line">l2_adjacency : True</span><br><span class="line">status : ACTIVE</span><br><span class="line">subnets : [u&apos;f2bd3531-fb6a-49a4-b63d-d531f8575f2d&apos;]</span><br><span class="line">description :</span><br><span class="line">tags : []</span><br><span class="line">updated_at : 2018-07-30T12:34:27Z</span><br><span class="line">provider:segmentation_id : None</span><br><span class="line">name : external</span><br><span class="line">admin_state_up : False</span><br><span class="line">tenant_id : ebe0a369198a4b92b0f294ef22386756</span><br><span class="line">created_at : 2018-07-30T12:34:26Z</span><br><span class="line">mtu : 1500</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
    </entry>
    
  
  
    
    <entry>
      <title>page</title>
      <link href="/index.html"/>
      <url>/index.html</url>
      <content type="html"><![CDATA[<p>top page</p>]]></content>
    </entry>
    
  
</search>
